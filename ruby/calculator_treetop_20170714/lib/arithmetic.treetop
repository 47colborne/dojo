grammar Arithmetic
  rule expression
    detected_rule:(literal / operation) {
        def value
            detected_rule.value
        end
    }
  end

  rule operation
     '('? operation_symbol space first:(literal / operation) space second:(literal / operation) ')'? {
        def value
            first.value.send(operation_symbol.symbol, second.value)
        end
     }
  end

  rule numbers
    whole_number space
  end

  rule literal
     "("?  whole_number ")"? {
       def value
         whole_number.text_value.to_i
       end
     }
  end

  rule whole_number
    [0-9]+ {
        def value
            text_value.to_i
        end
    }
  end

  rule space
    [\s]*
  end

  rule operation_symbol
    operator:('+' / '-' / '/' / '*') {
        def symbol
            operator.text_value.to_sym
        end
    }
  end
end
